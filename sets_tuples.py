# -*- coding: utf-8 -*-
"""sets_tuples.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1UARtJkV9ZJMH_UaHRfE1cj02Sxf8m7Hj

Sets
"""

# Defining a set
names_of_students_set = {"jon", "mykel", "sam"}

print(names_of_students_set)

# Sets are unindexed
names_of_students_set = {"jon", "mykel", "sam"}

#print(names_of_students_set[1])

# Adding a value to a set is similar to adding a value to a list

names_of_students_set = {"jon", "mykel", "sam"}

names_of_students_set.add("jon")

#names_of_students_list = ["jon", "mykel", "sam"]

#names_of_students_list.append("jon")

print(names_of_students_set)
#print(names_of_students_list)

# You can pop a value of a set

names_of_students_set = {"jon", "mykel", "sam"}

names_of_students_set.pop()
names_of_students_set.pop()

print(names_of_students_set)

# Update the values in a set

names_of_students_set = {"jon", "mykel", "sam"}

names_of_students_set.update(["bob", "alice"])

print(names_of_students_set)

# Remove values from a set using the remove keyword

names_of_students_set = {"jon", "mykel", "sam"}

names_of_students_set.remove("jon")

#names_of_students_set.remove("bob") will not work use discard

print(names_of_students_set)

# Discard can remove a value whether or not it actually exist in the set

names_of_students_set = {"jon", "mykel", "sam"}

#names_of_students_set.remove("jon")

names_of_students_set.discard("bob")

print(names_of_students_set)

# A set can converted to a list

names_of_students_list = ["jon", "mykel", "sam"]

names_of_students_set_converted = set(("jon", "mykel", "sam"))

print(type(names_of_students_set_converted))

"""Tuples"""

# Defining a tuple

names_of_students_tuple = ("jon", "sam", "mykel")

print(type(names_of_students_tuple))

# Converting a tuple to a list to manipulate

names_of_students_tuple = ("jon", "sam", "mykel")

names_of_students_tuple_list = list(names_of_students_tuple)

names_of_students_tuple_list.append("lol")

print(names_of_students_tuple_list)

# Converting a list to a tuple
names_of_students_tuple_list_converted = tuple(names_of_students_tuple_list)

print(type(names_of_students_tuple_list_converted))

# Adding a tuple to a tuple 
print(names_of_students_tuple_list_converted + names_of_students_tuple)

# Adding two tuples to create a new tuple

teachers = ("bob", "alice")

new_teacher = ("peter",) # A single element tuple

all_teachers = teachers + new_teacher

print(all_teachers)

# Unpacking a tuple

teachers = ("bob", "alice")

new_teacher = ("peter",)

all_teachers = teachers + new_teacher

math_teacher, phys_teacher, eng_teacher = all_teachers

print(eng_teacher)

# Using a wildcard to unpack a tuple

fruits = ("apple", "banana", "orange", "guava", "grapes", "nuts")

(edible, *non_edible) = fruits

print(non_edible)
print(edible)

fruits = ("apple", "banana", "orange", "guava", "grapes", "nuts")

(*edible, non_edible) = fruits

print(non_edible)
print(edible)

fruits = ("apple", "banana", "orange", "guava", "grapes", "nuts")

(*edible, non_edible, good_one) = fruits

print(edible)
print(non_edible)
print(good_one)

fruits = ("apple", "banana", "orange", "guava", "grapes", "nuts")

(edible, *non_edible, good_one) = fruits

print(edible)
print(non_edible)
print(good_one)