# -*- coding: utf-8 -*-
"""dictionaries.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1l3iNZXDbeLIu46AhfrjWW6USCKgzKkvu

Dictionaries
"""

# Examples of lists
names_of_students = ['jon','sam']
age_of_students = [21, 22]

print(names_of_students + age_of_students)

# Initializing a dictionary

python_class = {}

# A set is very similar to a dictionary in contruction.
python_class = {'names_of_students', 'age_of_students'}

print(python_class)

# A dictionary has a key mapped to a value. The value can be null
python_class = {'names_of_students': ['sam', 'jon'], 'age_of_students': [21, 22]}

print(python_class)

# Get the keys of a dictionary
print(python_class.keys())

# Get the values of a dictionary
print(python_class.values())

# Getting the keys in a dictionary
for key in python_class.keys():
  print(key)

# Getting the keys and pos it occupies in a dictionary
for pos, key in enumerate(python_class.keys()):
  print(pos, key)

# Get the values in a dictionary
for val in python_class.values():
  print(val)

# Get the key and value in dictionary using .items
for key, val in python_class.items():
  print(key, val)

# Checking if a value exists in a dictionary
if 'sam' in python_class:
  print('Yes, sam is in this class')
else:
  print('No')

if 'names_of_students' in python_class:
  print('Names of Students is in this class')

if 'sam' in python_class['names_of_students']:
  print('Yes, sam is in this class')
else:
  print('No')

example_dict = {'names': 'sam', 'age': 12}

if 'sam' in example_dict.values():
  print('Yes, sam is in this class')
else:
  print('No')

if 'sam' in python_class.values():
  print('Yes, sam is in this class')
else:
  print('No')

if ['sam', 'jon'] in python_class.values():
  print('Yes, sam is in this class')
else:
  print('No')

# Using loops and in keyword to check for existence of a value
for val in python_class.values():
  if 'sam' in val:
    print('found sam', 'haha')
    break

  else:
    print('Did not find sam')

# Using get to retrieve a value given a key
python_class.get('names_of_students','No name found')

python_class.get('teachers','No teachers found')

print(python_class)

# Using setdefault to set the value of a key if it doesn't exist
python_class.setdefault('names_of_students', ['sam', 'jon', 'mykel'])

python_class.setdefault('teachers', ['alice', 'bob'])

print(python_class)

# Below code was copied from a online compiler
# Online Python compiler (interpreter) to run Python online.
# Write Python 3 code in this online editor and run it.
school = { 
    'python': {
    'students' : ['sam', 'jon'],
    'teachers' : ['bob', 'alice'],
    'price' : 1299.99,
    'status': 'online'
    },
    'math':{
    'students' : ['mykel', 'jane'],
    'teachers' : ['jack', 'liza'],
    'price' : 1099.99,
    'status': 'on-campus'
    }
}

# for val in school.values():
#     if 'sam' in val['students']:
#         print('found sam')
#         break
    
#     else:
#         print('sam is not a registered student')
        

print(school['python']['price'] + school['math']['price'])

