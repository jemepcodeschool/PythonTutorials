# -*- coding: utf-8 -*-
"""flow_control.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/16opzNXnJWhx1nq-_cMmi7FIEhhrRHX8b

**Boolean Operators**


==   Equal to
"""

# list 

names_of_students = ["mykel", "sam", "john"]

# check if mykel is in names_of_students

"""**Boolean Operators**


!=        Not equal to

"""

# We evaluated that 2 is not equal to 3

#print(2 != 3)

# We evaluated that 3 is equal to 3
#print(3 != 3)

"""**Boolean Operators**


<   Less than

"""

#print(3 < 5)

print(1 < 4)

"""**Boolean Operators**


Greater than >

"""

is_greater = 6 > 5

print(is_greater)

"""**Boolean Operators**


<=    Less than or equal to

"""

# 5 is less than or equal to 6
#print(5 <= 6)

# 6 is less than or equal to 6
#print(6 <= 6)

# 7 is not less than or equal to 6
print(7 <= 6)

"""**Boolean Operators**

Greater than or equal to >=
"""

# 7 is greater than or equal to 6 
#print(7 >= 6)

# 6 is not greater than 6 but it is equal to 6
print(6 >= 6)

"""What is the difference between = and =="""

# Giving the variable number the value of 6
number = 6

#print(number)

print(number == 7)

"""**Truth Tables**"""

# If something is true or true than it is true

#print(6 > 5) # True
#print(6 == 6) # True
print(6 > 5 or 6 == 6)

# If something is true or false than it is true

#print(6 > 5) # True
#print(6 == 7) # False
print(6 > 5 or 6 == 7)

# If something is false or true than it is true

#print(5 > 5) # False
#print(6 == 6) # True
print(5 > 5 or 6 == 6)

# If something is false or false than it is false

#print(5 > 5) # False
#print(6 > 6) # False
print(5 > 5 or 6 > 6)

# If something is true and false than it is false

#print(5 == 5) # True
#print(6 > 6) # False
print(5 == 5 and 6 > 6)

# If something is false and true than it is false

#print(6 > 6) # False
#print(5 == 5) # True
print(6 > 6 and 5 == 5 )

# If something is false and false than it is false

#print(6 > 6) # False
#print(5 > 5) # False
print(6 > 6 and 5 > 5 )

# If something is true and true than it is true

#print(6 == 6) # True
#print(5 == 5) # True
print(6 == 6 and 5 == 5 )

"""The only way to get a false with an OR operator is when both statements are **False**

The only wat to get a true with an AND operator is when both statements are **True**

**Elements of flow controls**

1. The if statement
"""

# Example of an if statement

#if expression to be evaluated :
    # tab expression of what to do after the if statement runs


# if 6 > 5:
#   print("six is greater than five")

names_of_students = ["sam", "jon", "Mykel"]

if "Mykel" in names_of_students:
  print("You've won an award Mykel")

"""An ELSE statement

An else statement can only be used when we have an if statement
An else statement goes on the same indent as the if statement
"""

# How to write an else statement

# if (expression):
    # do something
# else:
    # do something else

# An example of else

# names_of_students = ["sam", "jon", "Mykel"]

# if "bob" in names_of_students:
#   print("You've won an award bob")
# else:
#   print("We are missing bob")


# Another example of else where we don't trigger the else

names_of_students = ["sam", "jon", "mykel", "bob"]

if "bob" in names_of_students:
  print("You've won an award bob")
else:
  print("We are missing bob")

"""Else if -> Elif

If statement with an else
"""

# An example of an elif

names_of_students = ["sam", "jon"]

if "bob" in names_of_students:
  print("You've won an award bob")
elif "mykel" in names_of_students:
  print("You've won an award Mykel")
else:
  print("We are missing bob and Mykel")

"""The while statement

1. It uses the while keyword
2. A condition
3. A colon



"""

names_of_students = ["sam", "jon"]

while "bob" and "mykel" not in names_of_students:
  print("1. We are missing bob or mykel")
  print("2. Adding bob or mykel to students")
  names_of_students.append("bob")
  print("3. We are missing bob or mykel")
  print("4. Adding bob or mykel to students")
  names_of_students.append("mykel")